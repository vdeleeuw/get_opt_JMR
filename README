DE LEEUW Valérian & COUASNET Robin
Gestion des arguments en lignes de commandes en C++ :

Principe :
Les classes, l'héritage, les méthodes et les variables sont décrites dans la documentation générée avec doxygen. 
Pour la consulter il faut aller dans /doc/html/ et ouvrir index.html avec votre navigateur internet.

Utilisation :
Tout d'abord, si vous le désirez, modifier le main.cpp pour ajouter des arguments ou modifier ceux déjà présents 
(avec cl.add(arg, val)) dans le vecteur d'option. Les types qui peuvent être testés sont : int, float, bool, unsigned int, 
double et vector. Par défaut il y a : pint, pfloat, puint, pstr, pbool (et cas particulier le type flag, expliqué plus bas).
N'importe quelle option peut s'écrire en option courte (-bool true) ou longue (--pbool=true), sauf pour le vecteur qui ne
lance qu'en option longue (ex: : --pstr=test1).

Cas particulier : le booléen peut s'écrire sans valeur et donc sa valeur sera 'true', ce sera donc un flag. 

Le programme s'utilise de la manière suivante :
./bin/projet -pbool true (ou --pbool=true) --pint=12 (ou -pint 12) etc ... (expliqué plus en détails dans le manuel);
Cas particulier :il existe un type fl flag, lancer le programme avec un -bool sans valeur.

Commandes (se placer dans /projet) :
Compiler : make ;
Executer : ./bin/projet -arg val ou --arg=val ;
Génerer la documentation : make doc ;
Nettoyer le dossier : make mrproper ;
Compiler le fichier de test CPPUNIT : make test ;
Executer le programme de test CPPUNIT : ./bin/test_projet ;

Manuel :
On peut accéder au man du projet lorsqu'on essaye d'exécuter le programme avec un mauvais argument, 
ainsi on aura accès à la description : du programme, de l'exécution et des types.
